#!/usr/bin/env zsh

FG='#93a1a1'
BG='#262626'
ICON_DIR="$HOME/Dropbox/Photos/dzen"

LAPTOP_MODE=
USER_CONTENT_WIDTH=380
if which acpid &> /dev/null; then
  LAPTOP_MODE=1
  USER_CONTENT_WIDTH=540
fi

zmodload zsh/zselect
SCREEN_LAYOUT=($(xrandr | sed -r -n 's/.*connected ([0-9]+)x[0-9]+([-+][0-9]+).*/\2 \1/p'))

XMONAD_LOG=
WORKSPACES=

parse_log () {
  local oifs="$IFS" fields

  IFS=$'\0'
  if ! read -t 0 -A WORKSPACES; then
    exit 0
  fi

  XMONAD_LOG=$WORKSPACES[1]
  shift WORKSPACES

  if [ "${#WORKSPACES[@]}" -eq 0 ]; then
    WORKSPACES=("0")
  fi

  IFS="$oifs"
}

refresh () {
  local oifs="$IFS" current=1 content offset width

  IFS=.
  for workspace in "${WORKSPACES[@]}"; do
    read id name <<<"$workspace"
    offset=$SCREEN_LAYOUT[$((id * 2 + 1))]
    width=$SCREEN_LAYOUT[$((id * 2 + 2))]

    if [ -n "$current" ]; then
      echo -n "^pa($offset)${XMONAD_LOG}^pa($((offset+width-USER_CONTENT_WIDTH)))^fg($FG)$USER_CONTENT^fg()"
    else
      echo -n "^pa($offset)^fg(#268bd2)^bg(#073642) ${name} ^fg()^bg()^pa($((offset+width-USER_CONTENT_WIDTH)))^fg($FG)$USER_CONTENT^fg()"
    fi

    current=
  done
  echo

  IFS="$oifs"
}

BAR_WIDTH=40
BAR_HEIGHT=8

LAST_CPU_STAT=(cpu 0 0 0 0)

user_content() {
  local oifs="$IFS"

  # network
  local net_icon="$ICON_DIR/net_wired.xbm"
  local net_action="urxvt -e sudo netcfg-menu"
  local profile=$(netcfg current)
  local vpn=
  if [ -z "$profile" ]; then
    echo -n " ^ca(1,$net_action)^i($net_icon) ^bg(#8b0000)^fg(#cccccc) N/A ^bg()^fg()^ca()"
  else
    if ip link show wlan0 &> /dev/null; then
      net_icon="$ICON_DIR/wifi_02.xbm"
    fi
    if ip link show ppp0 &> /dev/null; then
      vpn="^fg(#008b00)"
    fi

    echo -n " ^ca(1,$net_action)^i($net_icon)  ${vpn}${profile} ^fg()^ca()"
  fi

  if [ -n "$LAPTOP_MODE" ]; then
    # battery
    IFS=' ,'
    local battery_status battery_percentage battery_time
    acpi -b | cut -d\   -f 3,4,5 | read battery_status battery_percentage battery_time
    battery_percentage=${battery_percentage%\%}
    battery_time=${battery_time%:*}

    local battery_icon="$ICON_DIR/ac_01.xbm"
    if [ "$battery_status" = "Discharging" ]; then
      battery_icon="$ICON_DIR/bat_full_01.xbm"
    else
      battery_time="($battery_time)"
    fi
    local battery_fg="#008b00"
    if [ "$battery_percentage" -lt 10 ]; then
      battery_fg="#8b0000"
    elif [ "$battery_percentage" -lt 25 ]; then
      battery_fg="#d8d820"
    fi
    echo -n " ^i(${battery_icon}) $(echo $battery_percentage | gdbar -w $BAR_WIDTH -h $BAR_HEIGHT -fg $battery_fg -bg '#666') $battery_time "
    IFS="$oifs"
  fi

  local cpu_mem_action="urxvt -name htop -e htop"
  local -a current_cpu_stat
  current_cpu_stat=($(head -1 /proc/stat))
  local cpu_diff_user=$((current_cpu_stat[2] - LAST_CPU_STAT[2]))
  local cpu_diff_system=$((current_cpu_stat[3] - LAST_CPU_STAT[3]))
  local cpu_diff_nice=$((current_cpu_stat[4] - LAST_CPU_STAT[4]))
  local cpu_diff_idle=$((current_cpu_stat[5] - LAST_CPU_STAT[5]))
  LAST_CPU_STAT=(${current_cpu_stat[*]})
  local cpu_percentage=$(( (cpu_diff_user + cpu_diff_system + cpu_diff_nice) * 100 / (cpu_diff_user + cpu_diff_system + cpu_diff_nice + cpu_diff_idle) ))

  local cpu_fg="#008b00"
  if [ "$cpu_percentage" -gt 75 ]; then
    cpu_fg="#8b0000"
  elif [ "$cpu_percentage" -gt 50 ]; then
    cpu_fg="#d8d820"
  fi
  local cpu_icon="$ICON_DIR/cpu.xbm"
  echo -n " ^ca(1,${cpu_mem_action})^i(${cpu_icon}) $(echo $cpu_percentage | gdbar -w $BAR_WIDTH -h $BAR_HEIGHT -fg $cpu_fg -bg '#666') "

  local -a mem_stat
  mem_stat=($(head -4 /proc/meminfo | awk '{print $2}'))
  local mem_percentage=$(( (mem_stat[1] - mem_stat[2] - mem_stat[3] - mem_stat[4]) * 100 / mem_stat[1] ))

  local mem_fg="#008b00"
  if [ "$mem_percentage" -gt 75 ]; then
    mem_fg="#8b0000"
  elif [ "$mem_percentage" -gt 50 ]; then
    mem_fg="#d8d820"
  fi
  local mem_icon="$ICON_DIR/mem.xbm"
  echo -n " ^i(${mem_icon}) $(echo $mem_percentage | gdbar -w $BAR_WIDTH -h $BAR_HEIGHT -fg $mem_fg -bg '#666')^ca()"

  if [ -d "$HOME/Mail/INBOX" ]; then
    local cur=$(ls $HOME/Mail/INBOX/cur | wc -l)
    local new=$(ls $HOME/Mail/INBOX/new | wc -l)
    local -i total=cur+new
    local color=
    if [ "$new" -gt 0 ]; then
      color="^bg(#8b0000)^fg(#cccccc)"
    else
      color="^fg(#666)"
    fi
    echo -n " ^ca(1,xdotool key Super_L+m)^i(${HOME}/Dropbox/Photos/dzen/mail.xbm) ${color} ${new}/${total} ^fg()^bg()^ca() "
  fi
  date +" ^i($ICON_DIR/clock.xbm) ^ca(1,gsimplecal)%a %b %d, %H:%M^ca()"
  IFS="$oifs"
}

LAST_TIME=0
update_user_content () {
  local now=$(date +"%s")
  if ((now - LAST_TIME >= 60)); then
    USER_CONTENT=$(user_content)
    LAST_TIME=$now
  fi
}

[ -z "$DEBUG" ] && exec > >(dzen2 -fg "$FG" -bg "$BG" -ta l -e 'button3=' "$@")
while true; do
  update_user_content
  refresh
  if zselect -t 6000 -A fd -r 0; then
    parse_log
  fi
done
