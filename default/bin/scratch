#!/usr/bin/env bash

# Create temp scratch directory and edit the file in Vim.
#
# Examples:
#     # edit clipboard in temp file clipboard.js
#     scratch --clipboard js
#
#     # edit clipboard in temp file Car.java
#     scratch --clipboard Car.java
#
#     # edit an empty scratch file scratch.js in a temp directory.
#     scratch js
#
#     # edit an empty scratch file Car.java in a temp directory.
#     scratch Car.java

set -u
[ -n "${DEBUG:-}" ] && set -x || true

function vim_scratch() {
  set -e

  local basename="$1"
  shift

  local arg="${1:-}"
  local dir="${SCRATCH_DIR:-$(mktemp -d "$TMPDIR/scratch.XXXXX")}"
  local file="$basename"

  case "x${arg}" in
    x.*) file="$file$arg";;
    *.*) file="$arg";;
    x) : ;;
    *) file="$file.$arg";;
  esac

  SCRATCH_RESTORE_DIR="${SCRATCH_RESTORE_DIR:-"$(pwd)"}"
  trap "rm -rf $dir" EXIT

  cd "$dir"
  if [ "$basename" = clipboard ]; then
    pbpaste > "$file"
    vim -n -b "$file" && pbcopy < "$file"
  else
    vim -n -b "$file"
  fi
}

if [ "${1:-}" = "--eval" ]; then
  shift
  if [ "${1:-}" = "--vim" ]; then
    shift
    SCRATCH_DIR=
    if [ -n "${1:-}" ]; then
      SCRATCH_DIR="$(dirname "$1")"
      echo "cd $(printf '%q' "$SCRATCH_DIR")"
    fi
    if [[ "$#" > 0 ]]; then
      echo "vim $(printf '%q ' "$@")"
    else
      echo "vim"
    fi
    if [ -n "$SCRATCH_DIR" ]; then
      echo "cd $(printf '%q' "$(pwd)")"
    fi
  else
    if [ -z "${SCRATCH_DIR:-}" ]; then
      SCRATCH_DIR="$(mktemp -d "$TMPDIR/scratch.XXXXX")"
      echo "export SCRATCH_DIR=$(printf '%q' "$SCRATCH_DIR")"
    fi
    echo 'cd "$SCRATCH_DIR"'
    echo "$0 $(printf '%q ' "$@")"
    echo "cd $(printf '%q' "$(pwd)")"
  fi
elif [ "${1:-}" = "--clipboard" ]; then
  # Edit clipboard in vim. Replace the clipboard with the edited content.
  shift
  vim_scratch clipboard "$@"
elif [ "${1:-}" = "--scratch" ]; then
  shift
  vim_scratch scratch "$@"
elif [ "${1:-}" = "--vim" ]; then
  shift
  vim "$@"
else
  vim_scratch scratch "$@"
fi
