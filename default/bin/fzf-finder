#!/usr/bin/env bash

set -e
set -u
[ -n "${DEBUG:-}" ] && set -x || true

POSITIONAL_ARGS=()
OPT_PREVIEW="${OPT_PREVIEW:-true}"
OPT_DIRECTORY="."
OPT_RECURSIVE=

usage() {
  echo "Usage: fzf-finder [-R|--recursive] [-d|--directory DIRECTORY] [--no-preview]" >&2
}

while [[ $# -gt 0 ]]; do
  case $1 in
  --no-preview)
    OPT_PREVIEW=
    shift # past argument
    ;;
  -d | --directory)
    OPT_DIRECTORY="$2"
    shift # past argument
    shift # past value
    ;;
  -R | --recursive)
    OPT_RECURSIVE=true
    shift
    ;;
  -h | --help)
    usage
    exit 0
    ;;
  -* | --*)
    echo "Unknown option $1"
    usage
    exit 1
    ;;
  *)
    POSITIONAL_ARGS+=("$1") # save positional arg
    shift                   # past argument
    ;;
  esac
done

set -- "${POSITIONAL_ARGS[@]+"${POSITIONAL_ARGS[@]}"}" # restore positional parameters

if [[ $# -gt 1 ]]; then
  shift
  echo "Unknown args $*"
  exit 1
fi

if [[ $# -gt 0 ]]; then
  OPT_DIRECTORY="$1"
fi
cd "$OPT_DIRECTORY"

export OPT_PREVIEW

FZF_ARGS=(--header "$(pwd)/" --ansi --multi --nth='2..')
if [ -n "$OPT_PREVIEW" ]; then
  FZF_ARGS+=(--preview 'dog {2..}')
fi

if [[ "$OPT_RECURSIVE" == "true" ]]; then
  exec fzf "${FZF_ARGS[@]}"
fi

FZF_ARGS+=(--prompt "(h:up l:cd)‚ùØ " --bind "ctrl-r:clear-screen" --bind "ctrl-l:become(echo :cd {2..})" --bind "ctrl-h:become(echo :cd ..)")
ACCEPTED_LINES="$(exa --icons --color=always | fzf "${FZF_ARGS[@]}")"

while read line; do
  case "$line" in
  ":cd "*)
    NEW_OPT_DIRECTORY="${line#:cd }"
    if [ -d "$NEW_OPT_DIRECTORY" ]; then
      exec fzf-finder "$NEW_OPT_DIRECTORY"
    else
      exec fzf-finder
    fi
    ;;
  *)
    echo "$(pwd)/$line"
    ;;
  esac
done <<<"$ACCEPTED_LINES"
