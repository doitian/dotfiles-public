#!/usr/bin/env bash

realpath() {
  [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

gh_token() {
  local GH_HOSTS_YML="${XDG_CONFIG_HOME:-"$HOME/.config"}/gh/hosts.yml"
  if [ -f "$GH_HOSTS_YML" ]; then
    GITHUB_TOKEN="$(grep 'oauth_token: ' "$GH_HOSTS_YML" | head -1 | awk '{print $2}')"
    export GITHUB_TOKEN
  fi
}

layout_python-shared() {
  local python=${1:-python3}
  [[ $# -gt 0 ]] && shift
  unset PYTHONHOME

  if [[ -n $VIRTUAL_ENV ]]; then
    VIRTUAL_ENV=$(realpath "${VIRTUAL_ENV}")
  else
    local python_version
    python_version=$("$python" -c "import platform; print(platform.python_version())")
    if [[ -z $python_version ]]; then
      log_error "Could not detect Python version"
      return 1
    fi
    VIRTUAL_ENV="$HOME/.dirsenv/$(basename "$PWD")/python-$python_version"
  fi
  export VIRTUAL_ENV
  if [[ ! -d $VIRTUAL_ENV ]]; then
    log_status "no venv found; creating $VIRTUAL_ENV"
    "$python" -m venv "$VIRTUAL_ENV"
  fi

  PATH="${VIRTUAL_ENV}/bin:${PATH}"
  export PATH
}
