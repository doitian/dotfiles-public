# key binding
set -sg escape-time 0
set -g history-limit 10000
set -g buffer-limit 100
set -g prefix ^l
unbind ^b
bind ^l last-window
bind ^h send-prefix
bind ` last-pane
bind x kill-pane
bind 0 confirm-before -p "kill-window #W? (y/n)" kill-window
bind Q confirm-before -p "kill-window #W? (y/n)" kill-window
bind a choose-tree
bind A switch-client -l
bind , command-prompt "rename-window %%"
bind > move-window -r
bind < command-prompt "move-window -t %%"
bind C command-prompt "new-window '%%'"

bind m command-prompt -p man "split-window 'exec man %%'"
bind G command-prompt -p psg "split-window 'exec bash -c \"ps aux | grep %% | less\"'"
bind t split-window 'htop'
bind g split-window -c '#{pane_current_path}' 'tig status'

bind -r ^j next-window
bind -r ^k previous-window

unbind '"'
unbind %
bind s split-window -v -c '#{pane_current_path}'
bind ^s split-window -p 25 -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind ^v split-window -h -p 25 -c '#{pane_current_path}'
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R
bind -r K resize-pane -U 10
bind -r J resize-pane -D 10
bind -r H resize-pane -L 10
bind -r L resize-pane -R 10
bind -r p previous-window
bind -r n next-window

bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

bind b split-window "tmux lsw | percol --initial-index $(tmux lsw | awk '/active.$/ {print NR-1}') | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux select-window -t"
bind B split-window "tmux ls | percol --initial-index $(tmux ls | awk \"/^$(tmux display-message -p '#{session_name}'):/ {print NR-1}\") | cut -d':' -f 1 | tr -d '\n' | xargs -0 tmux switch-client -t"

bind R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

set-option -g set-titles on
set-option -g set-titles-string '#S: #W' # window number,program name,active (or not)
set-window-option -g automatic-rename on # auto name

set-option -g base-index 1
set-option -g pane-base-index 1
setw -g monitor-activity on
set-window-option -g mode-keys vi
set-window-option -g status-keys emacs
set -g default-terminal "xterm-256color"
set -g visual-activity off

# theme
# let s:base0       = "244"
# let s:base1       = "245"
# let s:base2       = "187"
# let s:base3       = "230"
# let s:yellow      = "136"
# let s:orange      = "166"
# let s:red         = "124"
# let s:magenta     = "125"
# let s:violet      = "61"
# let s:blue        = "33"
# let s:cyan        = "37"
# let s:green       = "64"

set -g status-right ""
# set -g status-left "[#S:#I.#P]"
set -g status-left-length 50

set -g status-bg colour235
set -g status-fg colour244
set -g status-left-bg colour239
set -g status-left-fg colour187
set -g message-bg colour239
set -g message-fg colour187
set -g mode-bg colour136
set -g pane-border-fg colour239
set -g pane-active-border-fg colour64
set -g display-panes-active-colour colour33
set -g display-panes-colour colour124
set-option -g pane-border-fg colour235
set-option -g pane-active-border-fg colour240

set-window-option -g -a window-status-current-style bg=colour33,fg=colour234
set-window-option -g -a window-status-activity-style bg=colour124,fg=colour234
set-window-option -g -a window-status-bell-style bg=colour234,fg=colour166
set-window-option -g -a window-status-last-style fg=colour33
