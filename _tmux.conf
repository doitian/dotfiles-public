# key binding
set -g history-limit 10000
set -g buffer-limit 100
set -g prefix ^l
unbind ^b
bind ^l last-window
bind ^h send-prefix
bind ` last-pane
bind x kill-pane
bind 0 confirm-before -p "kill-window #W? (y/n)" kill-window
bind Q confirm-before -p "kill-window #W? (y/n)" kill-window
bind a choose-tree
bind A switch-client -l
bind , command-prompt "rename-window %%"
bind < move-window
bind > move-window -r
bind C command-prompt "new-window '%%'"

bind m command-prompt -p man "split-window 'exec man %%'"
bind G command-prompt -p psg "split-window 'exec bash -c \"ps aux | grep %% | less\"'"
bind t split-window 'htop'
bind g split-window -c '#{pane_current_path}' 'tig'

bind -r ^j next-window
bind -r ^k previous-window

unbind '"'
unbind %
bind s split-window -v -c '#{pane_current_path}'
bind ^s split-window -p 25 -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind ^v split-window -h -p 25 -c '#{pane_current_path}'
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R
bind -r K resize-pane -U 10
bind -r J resize-pane -D 10
bind -r H resize-pane -L 10
bind -r L resize-pane -R 10
bind -r p previous-window
bind -r n next-window

bind R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

set-option -g set-titles on
set-option -g set-titles-string '#S: #W' # window number,program name,active (or not)
set-window-option -g automatic-rename on # auto name

set-option -g base-index 1
set-option -g pane-base-index 1
setw -g monitor-activity on
set-window-option -g mode-keys vi
set-window-option -g status-keys emacs
set -g default-terminal "xterm-256color"
set -g visual-activity off

# theme

#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
# set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

set-window-option -g window-status-fg colour249
set-window-option -g window-status-activity-attr none
set-window-option -g window-status-bell-attr none
set-window-option -g window-status-activity-fg yellow
set-window-option -g window-status-bell-fg red

if-shell 'test -x /usr/local/bin/reattach-to-user-namespace' 'set-option -g default-command "reattach-to-user-namespace -l zsh"'
if-shell 'test -x /usr/local/bin/reattach-to-user-namespace' 'bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'

if-shell 'test -z "$POWERLINE_CONFIG_COMMAND"' 'set-environment -g POWERLINE_CONFIG_COMMAND powerline-config'

# Don’t version-check for this core functionality -- anything too old to
# support these options likely won’t work well with powerline
set -g status on
set -g status-utf8 on
set -g status-interval 2
set -g status-left-length 20
# set -g status-right '#(eval $POWERLINE_COMMAND tmux right -R pane_id=`tmux display -p "#D"`)'
# set -g status-right-length 150
set -g status-right-length 0
set -g window-status-format "#[fg=colour244,bg=colour234]  #I #[fg=colour240] #[default]#W "
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"

# Legacy status-left definition to be overwritten for tmux Versions 1.8+
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]#(eval $POWERLINE_COMMAND tmux left)'

# Simplify tmux version checking by using multiple config files. Source these
# config files based on the version in which tmux features were added and/or
# deprecated. By splitting these configuration options into separate files,
run-shell 'eval $POWERLINE_CONFIG_COMMAND tmux source'
