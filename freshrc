# vim:ft=sh:
VAR_UNAME=$(uname -s)

fresh freshshell/fresh bin/fresh --bin

### shell.sh

# bzr git prompt_info_functions
for l in completion directories functions grep history key-bindings git misc spectrum termsupport theme-and-appearance; do
  fresh robbyrussell/oh-my-zsh "lib/${l}.zsh"
done

for p in safe-paste brew ssh-agent rake-fast; do
  fresh robbyrussell/oh-my-zsh "plugins/${p}/${p}.plugin.zsh"
done
fresh robbyrussell/oh-my-zsh "plugins/gitfast/git-prompt.sh"

fresh 'zsh/*.zsh'

fresh Tarrasch/zsh-bd bd.zsh

### bin
for f in ~/.dotfiles/bin/*; do
  f=$(basename "$f")
  fresh bin/$(basename "$f") --bin
done

### private dotfiles
if [ -f ~/.dotfiles-private ]; then
  PRIVATE_REPO=$(cat ~/.dotfiles-private)
  for f in vim-spell-en.utf-8.add; do
    fresh $PRIVATE_REPO "$f" --file
  done
  fresh $PRIVATE_REPO gitconfig --file="~/.gitconfig"
  if [ "$VAR_UNAME" = "Darwin" ]; then
    fresh $PRIVATE_REPO gitconfig_mac --file="~/.gitconfig"
  fi

  for f in ssh/config gem/credentials qrsbox/qrsbox.conf; do
    fresh $PRIVATE_REPO "$f" --file="~/.$f"
  done
  for f in glcl glmr qput; do
    fresh $PRIVATE_REPO "bin/$f" --bin
  done
fi

# MacOSX file cannot be symbol linked
mkdir -p ~/Library/KeyBindings
mkdir -p ~/.MacOSX
cp -f ~/.dotfiles/Library/KeyBindings/DefaultKeyBinding.dict ~/Library/KeyBindings/
cp -f ~/.dotfiles/MacOSX/environment.plist ~/.MacOSX/

### vim
mkdir -p ~/.vim/backup
fresh vimrc --file
fresh junegunn/vim-plug plug.vim --file=~/.vim/autoload/plug.vim
fresh junegunn/fzf . --file=~/.fzf/

### config files
for f in ~/.dotfiles/_*; do
  f=$(basename "$f")
  fresh "$f" --file="~/.${f#_}"
done

fresh aria2.conf --file=~/.aria2/aria2.conf
fresh bundle.config --file=~/.bundle/config
fresh subversion.config --file=~/.subversion/config
fresh rbenv/default-gems --file=~/.rbenv/default-gems

for f in ~/.dotfiles/Library/Rime/*.yaml; do
  f=$(basename "$f")
  fresh "Library/Rime/$f" --file=~/Library/Rime/$f
done

### GFW

fresh Leask/Flora_Pac flora_pac --bin
fresh fivesheep/chnroutes chnroutes.py --bin

### fresh_after_build
fresh_after_build() {
  cd ~/.fzf/ && chmod +x install && ./install --all --no-update-rc
}
